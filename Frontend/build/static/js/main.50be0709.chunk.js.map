{"version":3,"sources":["Component/columns.js","Component/callApi.js","App.js","reportWebVitals.js","index.js"],"names":["COLUMNS","Header","accessor","CallApi","useState","buildingName","setBuildingName","buildingLevel","setBuildingLevel","productionModifierPercentage","setProductionModifier","adminCostPercentage","setAdminCostPercentage","DATA","setDATA","dropDownValue","setDropDownValue","shown","setShown","columns","useMemo","data","rawData","undefined","console","log","JSON","stringify","Object","keys","map","key","useEffect","ToggleShown","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","populateTable","encodedName","encodeURI","targetURI","axios","get","res","arr","whatIsSetShown","String","id","type","name","placeholder","onChange","e","target","value","event","className","onClick","then","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.50be0709.chunk.js","sourcesContent":["export const COLUMNS = [\r\n    {\r\n      Header: \"Item Name\",\r\n      accessor: \"itemName\"\r\n    },\r\n    {\r\n      Header: \"Profit Per Hour\",\r\n      accessor: \"profitPerHour\"\r\n    }\r\n  ];","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { COLUMNS } from \"./columns\";\r\nimport { useAsyncDebounce, useTable } from \"react-table\";\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const CallApi = () => {\r\n\r\nconst [buildingName, setBuildingName] = useState('');\r\nconst [buildingLevel, setBuildingLevel] = useState('');\r\nconst [productionModifierPercentage, setProductionModifier] = useState('');\r\nconst [adminCostPercentage, setAdminCostPercentage] = useState('');\r\nconst [DATA, setDATA] = useState({});\r\nconst [dropDownValue, setDropDownValue] = useState('Normal');\r\nconst [shown, setShown] = useState(true);\r\n\r\nconst columns = useMemo(() => COLUMNS, []);\r\nconst data = useMemo(() => { // Because our nested dictionary returned from fastAPI is an array of one element object, which contains more objects we need to transform this into an array using .map\r\n  const rawData = DATA;\r\n  if (rawData != undefined && rawData != null){\r\n    console.log('rawData is no longer undefined or null, now is: '+JSON.stringify(rawData))\r\n    console.log('rawData mapped is returning: '+JSON.stringify(Object.keys(rawData).map((key) => rawData[key])))\r\n  return Object.keys(rawData).map((key) => rawData[key]);\r\n  }\r\n}, [DATA]);\r\n\r\nuseEffect (() => {\r\n  ToggleShown();\r\n},[])\r\n\r\nconst tableInstance = useTable({\r\n    columns,\r\n    data\r\n});\r\n\r\nconst {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = tableInstance;\r\n\r\nconst populateTable = async () => {\r\n    try{\r\n        let encodedName = encodeURI(buildingName)\r\n        let targetURI = `http://localhost:8000/api/calculateProfitPerHourOf{}?buildingName=${encodedName}&buildingLevel=${buildingLevel}&productionModifierPercentage=${productionModifierPercentage}&administrationCostPercentage=${adminCostPercentage}&phase=${dropDownValue}`\r\n        let res = await axios.get(targetURI);\r\n        let arr = res.data;\r\n        console.log('arr = '+arr)\r\n        console.log('arr stringified = '+JSON.stringify(arr))\r\n        setDATA(arr)\r\n        return (arr)\r\n        \r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\n\r\nconst ToggleShown = () => {\r\n  setShown(!shown)\r\n}\r\nconst HandleClick = () => {\r\n  setShown(false)\r\n  populateTable().then (() => {\r\n    console.log('this happened after pouplateTable completed the promise')\r\n  })\r\n  setShown(true)\r\n}\r\nconst whatIsSetShown = async () => {\r\n  ToggleShown();\r\n  console.log('Stringified data: '+String(JSON.stringify(data)))\r\n  console.log('data: '+String(data))\r\n  console.log('DATA = '+DATA)\r\n  console.log('DATA stringified = '+JSON.stringify(DATA))\r\n}\r\nconst handleChange = (event) => {\r\n  setDropDownValue(event.target.value)\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <div id='mainDiv'>\r\n        <p id='textBoxes'>\r\n        <input type=\"text\" name=\"buildingName\" id=\"buildingName\" placeholder=\"Building Name\" onChange={e => setBuildingName(e.target.value)}></input>\r\n        <input type=\"text\" name=\"buildingLevel\" id=\"buildingLevel\" placeholder=\"Building Level\" onChange={e => setBuildingLevel(e.target.value)}></input>\r\n        <input type=\"text\" name=\"productionModifier\" id=\"productionModifier\" placeholder=\"Production Modifier %\" onChange={e => setProductionModifier(e.target.value)}></input>\r\n        <input type=\"text\" name=\"adminCost\" id=\"adminCost\" placeholder=\"Administration Cost %\" onChange={e => setAdminCostPercentage(e.target.value)}></input>\r\n        <label>\r\n          <select value={dropDownValue} onChange={handleChange}>\r\n            <option value=\"Booming\">Booming</option>\r\n            <option value=\"Recession\">Recession</option>\r\n            <option value=\"Normal\">Normal</option>\r\n\r\n          </select>\r\n        </label>\r\n        </p>\r\n        <p id='Button'>\r\n        <button type='button' id=\"getDBinfo\" className='block' onClick={()=>HandleClick()}>Get DB Info</button>\r\n        <button type='button' id=\"getDBinfo\" className='block' onClick={()=>whatIsSetShown()}>Print State of setShown</button>\r\n        \r\n        </p> \r\n        {(shown && DATA) ?\r\n          <table id='outputTable' {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          :null}\r\n    </div> \r\n\r\n) \r\n\r\n};\r\n","import { CallApi } from \"./Component/callApi\";\nimport React from 'react'\n\nfunction App() {\n  return (\n    <div>\n      <CallApi />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}